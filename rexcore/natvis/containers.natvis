<?xml version="1.0" encoding="utf-8" ?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <Type Name="RexCore::SpanBase&lt;*, *&gt;">
    <DisplayString>{{Size={m_size}}}</DisplayString>

    <Expand>
      <Item Name="Item Type" ExcludeView="simple">"$T1"</Item>
      <Item Name="Index Type" ExcludeView="simple">"$T2"</Item>
      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>m_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="RexCore::VectorBase&lt;*, *, *&gt;">
    <DisplayString>{{Size={m_size}}}</DisplayString>
    
    <Expand>
      <Item Name="Size" ExcludeView="simple">m_size</Item>
      <Item Name="Capacity" ExcludeView="simple">m_capacity</Item>
      <Item Name="Allocator" ExcludeView="simple">m_allocator</Item>
      <Item Name="Item Type" ExcludeView="simple">"$T1"</Item>
      <Item Name="Index Type" ExcludeView="simple">"$T2"</Item>
      
      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>m_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="RexCore::InplaceVectorBase&lt;*, *, *, *&gt;">
    <DisplayString>{{Size={m_size}}}</DisplayString>

    <Expand>
      <Item Name="Size" ExcludeView="simple">m_size</Item>
      <Item Name="Capacity" ExcludeView="simple">m_capacity</Item>
      <Item Name="Inplace Size" ExcludeView="simple">size_t($T3)</Item>
      <Item Name="Allocator" ExcludeView="simple">m_allocator</Item>
      <Item Name="Item Type" ExcludeView="simple">"$T1"</Item>
      <Item Name="Index Type" ExcludeView="simple">"$T2"</Item>

      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>m_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="RexCore::FixedVectorBase&lt;*, *, *&gt;">
    <DisplayString>{{Size={m_size}}}</DisplayString>

    <Expand>
      <Item Name="Size" ExcludeView="simple">m_size</Item>
      <Item Name="Fixed Size" ExcludeView="simple">size_t($T3)</Item>
      <Item Name="Item Type" ExcludeView="simple">"$T1"</Item>
      <Item Name="Index Type" ExcludeView="simple">"$T2"</Item>

      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>($T1*)(void*)m_inplaceData</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="RexCore::StringViewBase&lt;*&gt;">
    <DisplayString Condition="m_data == nullptr &amp;&amp; m_size == 0">Empty</DisplayString>
    <DisplayString Condition="!(m_data == nullptr &amp;&amp; m_size == 0)">{m_data, na}{{Size={m_size}}}</DisplayString>
    <StringView>m_data, na</StringView>

    <Expand>
      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>m_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>  

  <Type Name="RexCore::StringBase&lt;*, *, *&gt;">
    <DisplayString>{m_size &amp; SmallStringBitMask ? m_small : m_big.m_data, na}{{Size={m_size&amp;(~SmallStringBitMask)}}}</DisplayString>
    <StringView>m_size &amp; SmallStringBitMask ? m_small : m_big.m_data, na</StringView>

    <Expand>
      <Item Name="Size" ExcludeView="simple">m_size&amp;(~SmallStringBitMask)</Item>
      <Item Name="Capacity" ExcludeView="simple">m_size &amp; SmallStringBitMask ? SmallStringSize - 1 : m_big.m_capacity</Item>
      <Item Name="Inplace Size" Condition="$T3 != 0" ExcludeView="simple">size_t($T3)</Item>
      <Item Name="Allocator" ExcludeView="simple">m_allocator</Item>

      <ArrayItems>
        <Size>m_size&amp;(~SmallStringBitMask)</Size>
        <ValuePointer>m_size &amp; SmallStringBitMask ? m_small : m_big.m_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="RexCore::AllocatorBase&lt;*&gt;">
    <DisplayString>{"$T1"}</DisplayString>
  </Type>

  <Type Name="RexCore::WeakPtr&lt;*&gt;">
    <DisplayString Condition="m_ptr == nullptr || m_controlBlock->refCount == 0">Empty</DisplayString>
    <DisplayString Condition="m_ptr != nullptr &amp;&amp; m_controlBlock->refCount > 0">{{Ptr={m_ptr} Refs={m_controlBlock->refCount} WeakRefs={m_controlBlock->refCount >= 1 ? m_controlBlock->weakRefCount - 1 : m_controlBlock->weakRefCount}}</DisplayString>

    <Expand>
      <Item Name="Refs" Condition="m_ptr != nullptr &amp;&amp; m_controlBlock->refCount > 0" ExcludeView="simple">m_controlBlock->refCount</Item>
      <Item Name="WeakRefs" Condition="m_ptr != nullptr &amp;&amp; m_controlBlock->refCount > 0" ExcludeView="simple">m_controlBlock->refCount >= 1 ? m_controlBlock->weakRefCount - 1 : m_controlBlock->weakRefCount</Item>
      <Item Name="Ptr" ExcludeView="simple">m_ptr</Item>
    </Expand>
  </Type>

  <Type Name="RexCore::SharedPtr&lt;*&gt;">
    <DisplayString Condition="m_ptr == nullptr || m_controlBlock->refCount == 0">Empty</DisplayString>
    <DisplayString Condition="m_ptr != nullptr &amp;&amp; m_controlBlock->refCount > 0">{{Ptr={m_ptr} Refs={m_controlBlock->refCount} WeakRefs={m_controlBlock->refCount >= 1 ? m_controlBlock->weakRefCount - 1 : m_controlBlock->weakRefCount}}</DisplayString>

    <Expand>
      <Item Name="Refs" Condition="m_ptr != nullptr &amp;&amp; m_controlBlock->refCount > 0" ExcludeView="simple">m_controlBlock->refCount</Item>
      <Item Name="WeakRefs" Condition="m_ptr != nullptr &amp;&amp; m_controlBlock->refCount > 0" ExcludeView="simple">m_controlBlock->refCount >= 1 ? m_controlBlock->weakRefCount - 1 : m_controlBlock->weakRefCount</Item>
      <Item Name="Ptr" ExcludeView="simple">m_ptr</Item>
    </Expand>
  </Type>

  <Type Name="RexCore::AtomicWeakPtr&lt;*&gt;">
    <DisplayString Condition="m_ptr == nullptr || m_controlBlock->refCount._Storage._Value == 0">Empty</DisplayString>
    <DisplayString Condition="m_ptr != nullptr &amp;&amp; m_controlBlock->refCount._Storage._Value > 0">{{Ptr={m_ptr} Refs={m_controlBlock->refCount._Storage._Value} WeakRefs={m_controlBlock->refCount._Storage._Value >= 1 ? m_controlBlock->weakRefCount._Storage._Value - 1 : m_controlBlock->weakRefCount._Storage._Value}}</DisplayString>

    <Expand>
      <Item Name="Refs" Condition="m_ptr != nullptr &amp;&amp; m_controlBlock->refCount._Storage._Value > 0" ExcludeView="simple">m_controlBlock->refCount._Storage._Value</Item>
      <Item Name="WeakRefs" Condition="m_ptr != nullptr &amp;&amp; m_controlBlock->refCount._Storage._Value > 0" ExcludeView="simple">m_controlBlock->refCount._Storage._Value >= 1 ? m_controlBlock->weakRefCount._Storage._Value - 1 : m_controlBlock->weakRefCount._Storage._Value</Item>
      <Item Name="Ptr" ExcludeView="simple">m_ptr</Item>
    </Expand>
  </Type>

  <Type Name="RexCore::AtomicSharedPtr&lt;*&gt;">
    <DisplayString Condition="m_ptr == nullptr || m_controlBlock->refCount._Storage._Value == 0">Empty</DisplayString>
    <DisplayString Condition="m_ptr != nullptr &amp;&amp; m_controlBlock->refCount._Storage._Value > 0">{{Ptr={m_ptr} Refs={m_controlBlock->refCount._Storage._Value} WeakRefs={m_controlBlock->refCount._Storage._Value >= 1 ? m_controlBlock->weakRefCount._Storage._Value - 1 : m_controlBlock->weakRefCount._Storage._Value}}</DisplayString>

    <Expand>
      <Item Name="Refs" Condition="m_ptr != nullptr &amp;&amp; m_controlBlock->refCount._Storage._Value > 0" ExcludeView="simple">m_controlBlock->refCount._Storage._Value</Item>
      <Item Name="WeakRefs" Condition="m_ptr != nullptr &amp;&amp; m_controlBlock->refCount._Storage._Value > 0" ExcludeView="simple">m_controlBlock->refCount._Storage._Value >= 1 ? m_controlBlock->weakRefCount._Storage._Value - 1 : m_controlBlock->weakRefCount._Storage._Value</Item>
      <Item Name="Ptr" ExcludeView="simple">m_ptr</Item>
    </Expand>
  </Type>
</AutoVisualizer>